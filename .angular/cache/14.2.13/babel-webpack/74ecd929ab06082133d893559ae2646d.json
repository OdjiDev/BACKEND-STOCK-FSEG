{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ProduitDto } from 'src/app/classes/produit-dto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/produit.service\";\nimport * as i3 from \"src/app/services/categorie.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"src/app/field-error-display/field-error-display.component\";\n\nfunction UpdateProduitComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"text-center \", ctx_r0.style, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\n\nexport let UpdateProduitComponent = /*#__PURE__*/(() => {\n  class UpdateProduitComponent {\n    constructor(formBuilder, produitService, categorieService, router, route) {\n      this.formBuilder = formBuilder;\n      this.produitService = produitService;\n      this.categorieService = categorieService;\n      this.router = router;\n      this.route = route;\n      this.produitDto = new ProduitDto();\n      this.idProduit = 0;\n      this.categorieDtos = [];\n      this.formSubmitAttempt = false;\n      this.formProduit = this.formBuilder.group({\n        code: [null, Validators.required],\n        nom: [null, Validators.required] // categorieDto: [null, Validators.required],\n\n      });\n      this.idProduit = this.router.snapshot.params['id'];\n      this.getProduit(this.idProduit); // this.produitDto.categorieDto.id=1;\n\n      this.getAllCategories();\n    }\n\n    ngOnInit() {\n      throw new Error('Method not implemented.');\n    } //Envoi de données vers le serveur\n\n\n    submitForm() {\n      this.formSubmitAttempt = true;\n      this.updateProduit(this.produitDto); // this.getAllCategories();\n    } //envoi des données de differentes interfaces à la base de données\n\n\n    updateProduit(et) {\n      if (this.formProduit.valid) {\n        this.produitService.updateProduit(et.id, et).subscribe(data => {\n          this.produitDto = data;\n          this.showSuccessMessage('Produit enrégistré avec succès');\n          this.formProduit.reset();\n          this.formSubmitAttempt = false;\n          return;\n        }, error => {\n          // Handle error scenario (e.g., display error message)\n          console.error(\"Error updating produit:\", error);\n        });\n      } else {\n        this.showErrorMessage('Verifiez vos données et renseignez les champs obligatoire avec un *');\n      }\n    }\n\n    getProduit(id) {\n      this.produitService.getProduitById(id).subscribe(data => {\n        this.produitDto = data;\n      });\n    }\n\n    showSuccessMessage(id) {\n      this.message = 'Opération réussie !\\n ' + id;\n      this.style = \"alert alert-success\";\n      setTimeout(() => {\n        this.message = '';\n      }, 5000);\n      this.route.navigate(['/admin/list-produit']);\n    }\n\n    showErrorMessage(id) {\n      this.message = 'Oops un probleme est survenu. Opération échouée !\\n ' + id;\n      this.style = \"alert alert-danger\";\n      setTimeout(() => {\n        this.message = '';\n      }, 5000);\n    } //load categories form the forms\n\n\n    getAllCategories() {\n      this.categorieService.getCategories().subscribe(data => {\n        this.categorieDtos = data;\n      });\n    } // verify if the formProduit's fields are validated\n\n\n    isFieldValid(field) {\n      return !this.formProduit.get(field).valid && this.formProduit.get(field).touched || this.formProduit.get(field).untouched && this.formSubmitAttempt;\n    } // display css style for the the fields that aren't validate\n\n\n    displayFieldCss(field) {\n      return {\n        'has-error': this.isFieldValid(field),\n        'has-feedback': this.isFieldValid(field)\n      };\n    } // loops fields in ordeer to verify if all are ok\n\n\n    validateAllFormFields(formGroup) {\n      Object.keys(formGroup.controls).forEach(field => {\n        const control = formGroup.get(field); //{3}\n\n        if (control instanceof FormControl) {\n          //{4}\n          control.markAsTouched({\n            onlySelf: true\n          });\n        } else if (control instanceof FormGroup) {\n          //{5}\n          this.validateAllFormFields(control); //{6}\n        }\n      });\n    }\n\n  }\n\n  UpdateProduitComponent.ɵfac = function UpdateProduitComponent_Factory(t) {\n    return new (t || UpdateProduitComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProduitService), i0.ɵɵdirectiveInject(i3.CategorieService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  UpdateProduitComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateProduitComponent,\n    selectors: [[\"app-update-produit\"]],\n    decls: 39,\n    vars: 13,\n    consts: [[1, \"container\", \"d-flex\", \"justify-content-center\"], [3, \"formGroup\", \"ngSubmit\"], [3, \"class\", 4, \"ngIf\"], [1, \"card\", \"col-6\", \"p-2\"], [1, \"card-header\", \"text-center\", \"p-2\", \"bg-info\"], [1, \"card-content\"], [1, \"form-group\"], [\"for\", \"code\"], [\"type\", \"text\", \"autofocus\", \"\", \"id\", \"code\", \"formControlName\", \"code\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"errorMsg\", \"Veuillez renseigner le code du d\\u00E9partement\", 3, \"displayError\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nom\", \"formControlName\", \"nom\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"errorMsg\", \"Veuillez renseigner le nom du d\\u00E9partement\", 3, \"displayError\"], [\"for\", \"designation\"], [\"type\", \"text\", \"id\", \"designation\", \"formControlName\", \"designation\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"errorMsg\", \"Veuillez renseigner le designation du d\\u00E9partement\", 3, \"displayError\"], [\"for\", \"PrixAchat\"], [\"type\", \"text\", \"id\", \"PrixAchat\", \"formControlName\", \"PrixAchat\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"errorMsg\", \"Veuillez renseigner le PrixAchat du d\\u00E9partement\", 3, \"displayError\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"col-4\", \"mx-auto\", 3, \"disabled\"], [1, \"fa\", \"fa-edit\"], [\"routerLink\", \"/admin/list-produit\", 1, \"btn\", \"btn-danger\", \"col-4\", \"mx-auto\"], [1, \"fa\", \"fa-arrow-left\"]],\n    template: function UpdateProduitComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateProduitComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵtemplate(2, UpdateProduitComponent_div_2_Template, 2, 4, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"h5\", 4);\n        i0.ɵɵtext(5, \"Formulaire de modification de produits\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateProduitComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.produitDto.codeproduit = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"app-field-error-display\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"nom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateProduitComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.produitDto.nom = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"app-field-error-display\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\", 13);\n        i0.ɵɵtext(19, \"designation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateProduitComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.produitDto.designation = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"app-field-error-display\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 6)(23, \"label\", 13);\n        i0.ɵɵtext(24, \"designation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateProduitComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.produitDto.designation = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"app-field-error-display\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 6)(28, \"label\", 16);\n        i0.ɵɵtext(29, \"PrixAchat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"input\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateProduitComponent_Template_input_ngModelChange_30_listener($event) {\n          return ctx.produitDto.prixAchat = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"app-field-error-display\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 19)(33, \"button\", 20);\n        i0.ɵɵelement(34, \"i\", 21);\n        i0.ɵɵtext(35, \" Modifier \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 22);\n        i0.ɵɵelement(37, \"i\", 23);\n        i0.ɵɵtext(38, \" Annuler \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.formProduit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.message);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.produitDto.codeproduit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"displayError\", ctx.isFieldValid(\"code\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.produitDto.nom);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"displayError\", ctx.isFieldValid(\"nom\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.produitDto.designation);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"displayError\", ctx.isFieldValid(\"designation\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.produitDto.designation);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"displayError\", ctx.isFieldValid(\"designation\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.produitDto.prixAchat);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"displayError\", ctx.isFieldValid(\"PrixAchat\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.formProduit.valid);\n      }\n    },\n    dependencies: [i5.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.FieldErrorDisplayComponent]\n  });\n  return UpdateProduitComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}