{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FournisseurService = /*#__PURE__*/(() => {\n  class FournisseurService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseURL = environment.baseURL + \"fournisseurs\";\n    } // Methode pour le chargement de tous les fournisseurs depuis la base de données\n\n\n    getFournisseurs() {\n      return this.httpClient.get(`${this.baseURL}/list`);\n    } // Methode pour le chargement d'un fournisseur depuis la base de données avec son id\n\n\n    getFournisseurById(id) {\n      return this.httpClient.get(`${this.baseURL}/${id}`);\n    } // Methode pour l'ajout d'un nouveau fournisseur dans la base de données\n\n\n    addFournisseur(fournisseur) {\n      return this.httpClient.post(`${this.baseURL}`, fournisseur);\n    }\n\n    updateFournisseur(id, fournisseurDto) {\n      return this.httpClient.put(`${this.baseURL}/${id}`, fournisseurDto);\n    }\n\n    deleteFournisseur(id) {\n      return this.httpClient.delete(`${this.baseURL}/${id}`);\n    }\n\n  }\n\n  FournisseurService.ɵfac = function FournisseurService_Factory(t) {\n    return new (t || FournisseurService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  FournisseurService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FournisseurService,\n    factory: FournisseurService.ɵfac,\n    providedIn: 'root'\n  });\n  return FournisseurService;\n})();","map":null,"metadata":{},"sourceType":"module"}